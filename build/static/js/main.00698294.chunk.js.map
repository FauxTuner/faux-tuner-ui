{"version":3,"sources":["components/NavMenu.js","components/AppRoute.js","utils/request.js","pages/Locast.js","pages/PlutoTV.js","pages/IPTV.js","pages/Settings.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["NavMenu","history","useHistory","navigate","useCallback","pathname","search","console","log","push","List","component","aria-label","ListItem","button","onClick","ListItemText","primary","useStyles","makeStyles","theme","navMenu","flexGrow","minWidth","maxWidth","flexShrink","mainContent","AppRoute","children","classes","Grid","container","item","className","request","path","options","headers","body","JSON","stringify","fetch","then","res","json","root","margin","header","marginBottom","spacing","form","marginTop","warning","menuButton","marginRight","title","Locast","useState","status","setStatus","username","password","credentials","setCredentials","handleChange","e","field","target","value","useEffect","Box","p","Typography","variant","user","Card","CardContent","name","ts","Date","now","donationExpire","didDonate","donationActive","onSubmit","preventDefault","method","gutterBottom","Chip","size","icon","label","TextField","onChange","fullWidth","required","autoComplete","type","CardActions","Button","color","PlutoTV","input","display","table","width","iconSquare","height","backgroundColor","alignItems","justifyContent","overflow","objectFit","fileForm","urlForm","CreateDialog","props","theform","useRef","onClose","open","channelData","setChannelData","activeImageTab","setSctiveImageTab","handleFileSelect","file","files","length","alert","fr","FileReader","onload","imageData","result","image","readAsDataURL","handleIconTabChange","index","handleClose","Dialog","scroll","DialogTitle","DialogContent","dividers","id","channel","catch","err","autoFocus","placeholder","ButtonGroup","startIcon","alt","src","accept","multiple","htmlFor","ref","style","visibility","DialogActions","current","click","IPTV","channels","setChannels","setOpen","map","key","ListItemAvatar","Avatar","iconUrl","secondary","guide","newItem","Settings","Home","App","basename","AppBar","position","Toolbar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.00698294.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nexport default function NavMenu() {\n  const history = useHistory();\n\n  const navigate = useCallback((pathname, search) => {\n    console.log(pathname);\n    history.push(pathname);\n  }, [history]);\n\n  return (\n    <List component=\"nav\" aria-label=\"main mailbox folders\">\n      <ListItem button onClick={() => navigate('/')}>\n        <ListItemText primary=\"Home\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/locast')}>\n        <ListItemText primary=\"Locast\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/plutotv')}>\n        <ListItemText primary=\"Pluto.tv\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/iptv')}>\n        <ListItemText primary=\"IPTV & Custom Streams\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/settings')}>\n        <ListItemText primary=\"Settings\" />\n      </ListItem>\n    </List>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import './App.css';\nimport NavMenu from './NavMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  navMenu: {\n    flexGrow: 1,\n    minWidth: 120,\n    maxWidth: 220,\n    flexShrink: 0\n  },\n  mainContent: {\n    flexGrow: 1,\n    // flexShrink: 1\n  }\n}));\n\nexport default function AppRoute({ children }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Grid item className={classes.navMenu}>\n        <NavMenu />\n      </Grid>\n      <Grid item className={classes.mainContent}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n","\nexport default function request(path, options = { headers: {} }) {\n  options.headers = {\n    ...options.headers,\n    'Accept': 'application/json'\n  };\n  // let body;\n  if (options.body) {\n    options.headers = {\n      ...options.headers,\n      'Content-Type': 'application/json'\n    };\n    options.body = JSON.stringify(options.body);\n  }\n  return fetch(`/api/${path}`, options).then(res => res.json());\n}\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport request from '../utils/request';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\n\nimport LockIcon from '@material-ui/icons/Lock';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 640,\n    margin: 'auto'\n  },\n  header: {\n    marginBottom: theme.spacing(4)\n  },\n  form: {\n    marginTop: theme.spacing(2),\n\n    '& > *': {\n      marginBottom: theme.spacing(2)\n    }\n  },\n  warning: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  }\n}));\n\n\nexport default function Locast() {\n  const classes = useStyles();\n  const [status, setStatus] = useState(null);\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('submit', credentials);\n    request('locast/login', { method: 'POST', body: credentials }).then(res => {\n      console.log('response', res);\n    });\n  }\n  const handleChange = useCallback((e, field) => {\n    setCredentials({ ...credentials, [field]: e.target.value });\n  }, [credentials, setCredentials]);\n\n  useEffect(() => {\n    request('locast/status').then(res => {\n      setStatus(res);\n    });\n  }, [setStatus]);\n\n  const donationActive = () => {\n    const ts = Date.now();\n    console.log(ts, status.user?.donationExpire)\n    return status?.user.didDonate && status.user?.donationExpire > ts;\n  }\n  if (!status) {\n    return null;\n  }\n  return (\n    <Box p={3}>\n      <Typography className={classes.header} variant=\"h5\" component=\"h2\">Locast Settings</Typography>\n\n      { status.user ? (\n        <div>\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography>Signed in as: {status?.user.name}</Typography>\n              <Typography>Donation Active: {donationActive() ? 'Yes' : 'No'}</Typography>\n            </CardContent>\n          </Card>\n\n          <Typography variant=\"h5\">Channel Lineup</Typography>\n\n        </div>\n\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                Connect your Locast.org account\n              </Typography>\n              <Typography variant=\"body2\">\n                To access Locast channels available in your area with faux-tuner, you'll need an active Locast account.\n              </Typography>\n\n              <Chip\n                size=\"small\"\n                className={classes.warning}\n                icon={<LockIcon size=\"small\" />}\n                label=\"We do not store this information.\"\n              />\n\n              <div className={classes.form}>\n                <TextField\n                  onChange={(e) => handleChange(e, 'username')}\n                  fullWidth\n                  required\n                  autoComplete=\"username\"\n                  label=\"Username\"\n                />\n                <TextField\n                  onChange={(e) => handleChange(e, 'password')}\n                  fullWidth\n                  required\n                  autoComplete=\"current-password\"\n                  type=\"password\"\n                  label=\"Password\"\n                />\n              </div>\n            </CardContent>\n            <CardActions>\n              <Button type=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </CardActions>\n          </Card>\n        </form>\n\n      )}\n      <pre>{JSON.stringify(status, null, 1)}</pre>\n\n    </Box>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function PlutoTV() {\n  return (\n    <Box p={3}>\n      <Typography variant=\"h5\">Pluto.tv Settings</Typography>\n    </Box>\n  );\n}\n","import React, { useRef, useState, useCallback, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport request from '../utils/request';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport PublishIcon from '@material-ui/icons/Publish';\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 640,\n    margin: 'auto'\n  },\n  header: {\n    marginBottom: theme.spacing(4)\n  },\n  form: {\n    // marginTop: theme.spacing(2),\n\n    '& > *': {\n      marginBottom: theme.spacing(4)\n    }\n  },\n  warning: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  input: {\n     display: 'none',\n  },\n  table: {\n    width: '100%'\n  },\n  iconSquare: {\n    width: 100,\n    height: 100,\n    backgroundColor: '#555',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    marginRight: theme.spacing(3),\n\n    '& > img': {\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain'\n    }\n  },\n  fileForm: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  urlForm: {\n    display: 'flex',\n    // '& > *': {\n    //   flexGrow: 0\n    // }\n  }\n}));\n\n\nfunction CreateDialog(props) {\n  const classes = useStyles();\n  const theform = useRef();\n  const { onClose, open } = props;\n  const [channelData, setChannelData] = useState({});\n  const [activeImageTab, setSctiveImageTab] = useState(0);\n\n\n  const handleChange = useCallback((e, field) => {\n    setChannelData({ ...channelData, [field]: e.target.value });\n  }, [channelData, setChannelData]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log('handleSubmit', channelData);\n    request('iptv/create', { method: 'POST', body: channelData }).then(({ channel }) => {\n      onClose(null, channel);\n    }).catch(err => {\n      console.log(err);\n      onClose(err);\n    });\n\n  };\n\n  const handleFileSelect = useCallback((e) => {\n    const file = e.target.files.length && e.target.files[0];\n    if (file) {\n      if (file.size > 4e4) {\n        return alert('File must be under 40k.')\n      }\n      const fr = new FileReader();\n      fr.onload = () => {\n        // console.log('loaded', fr.result);\n        const imageData = fr.result;\n        setChannelData({ ...channelData, image: imageData });\n      }\n      fr.readAsDataURL(file);\n    }\n    // console.log('handleFileSelect', e.target.files);\n  }, [channelData, setChannelData]);\n\n  const handleIconTabChange = useCallback((index) => {\n    setSctiveImageTab(index);\n    setChannelData({ ...channelData, image: null });\n  }, [setSctiveImageTab, setChannelData, channelData]);\n\n  const handleClose = () => {\n    onClose();\n  };\n  const handleSyntheticSubmit = (e) => {\n    theform.current.click();\n  }\n\n  return (\n    <Dialog scroll=\"paper\" onClose={handleClose} open={open}>\n\n      <DialogTitle>Add Channel</DialogTitle>\n\n      <DialogContent dividers={true}>\n        <form id=\"createform\" onSubmit={handleSubmit}>\n          <div className={classes.form}>\n            <TextField\n              autoFocus\n              onChange={(e) => handleChange(e, 'name')}\n              fullWidth\n              required\n              label=\"Name\"\n            />\n            <TextField\n              onChange={(e) => handleChange(e, 'description')}\n              fullWidth\n              label=\"Description\"\n            />\n            <TextField\n              onChange={(e) => handleChange(e, 'url')}\n              fullWidth\n              required\n              placeholder=\"http://\"\n              label=\"MPEGTS/HLS URL\"\n            />\n\n            <Typography>Channel Icon</Typography>\n            <ButtonGroup variant=\"contained\">\n              <Button\n                color={activeImageTab===0 ? 'primary' : 'default'}\n                onClick={() => handleIconTabChange(0)}\n                startIcon={(<PublishIcon />)}\n              >\n                File\n              </Button>\n              <Button\n                color={activeImageTab===1 ? 'primary' : 'default'}\n                onClick={() => handleIconTabChange(1)}\n                startIcon={(<LinkIcon />)}\n              >\n                URL\n              </Button>\n            </ButtonGroup>\n            {activeImageTab === 0 ? (\n              <div className={classes.fileForm}>\n                <div>\n                  <div className={classes.iconSquare}>\n                    { channelData.image && (<img alt=\"icon\" src={channelData.image} />)}\n                  </div>\n                </div>\n                <input\n                  accept=\"image/*\"\n                  className={classes.input}\n                  onChange={handleFileSelect}\n                  id=\"contained-button-file\"\n                  multiple\n                  type=\"file\"\n                />\n                <label htmlFor=\"contained-button-file\">\n                  <Button variant=\"contained\" component=\"span\">\n                    Upload Channel Icon\n                  </Button>\n                </label>\n              </div>\n            ) : (\n              <div className={classes.urlForm}>\n                <TextField\n                  fullWidth\n                  label=\"Image URL\"\n                  onChange={(e) => handleChange(e, 'image')}\n                  placeholder=\"http://\"\n                />\n              </div>\n            )}\n\n          </div>\n          <input type=\"submit\" ref={theform} style={{visibility: 'hidden'}} />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button onClick={handleSyntheticSubmit} color=\"primary\">\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\n\nexport default function IPTV() {\n  const classes = useStyles();\n  const [channels, setChannels] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    request(`iptv/channels`).then(res => {\n      console.log(res.channels);\n      setChannels(res.channels);\n    });\n  }, [setChannels]);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (err, newItem) => {\n    console.log(err, newItem);\n    setChannels([...channels, newItem]);\n    setOpen(false);\n  };\n\n\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h5\">{`IPTV & Custom Streams`}</Typography>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Channel\n      </Button>\n\n      <List>\n        {channels && channels.map((channel) => (\n          <ListItem button key={channel.id}>\n            <ListItemAvatar>\n              <Avatar src={channel.iconUrl} />\n            </ListItemAvatar>\n            <ListItemText primary={channel.name} secondary={`Channel 3000.${channel.guide}`}></ListItemText>\n          </ListItem>\n        ))}\n      </List>\n\n\n      <CreateDialog open={open} onClose={handleClose} />\n\n    </Box>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Settings() {\n  return (\n    <Box p={3}>\n      <Typography variant=\"h5\">FauxTuner Settings</Typography>\n    </Box>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Home() {\n  return (\n    <Box p={3}>\n      <Typography variant=\"h5\">Dashboard</Typography>\n    </Box>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppRoute from './components/AppRoute';\n\nimport Locast from './pages/Locast';\nimport PlutoTV from './pages/PlutoTV';\nimport IPTV from './pages/IPTV';\nimport Settings from './pages/Settings';\nimport Home from './pages/Home';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  }\n}));\n\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter basename=\"/web\">\n\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            {/*\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n            */}\n            <Typography variant=\"h6\" className={classes.title}>\n              faux-tuner\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/locast\">\n            <AppRoute><Locast /></AppRoute>\n          </Route>\n          <Route path=\"/plutotv\">\n            <AppRoute><PlutoTV /></AppRoute>\n          </Route>\n          <Route path=\"/iptv\">\n            <AppRoute><IPTV /></AppRoute>\n          </Route>\n          <Route path=\"/settings\">\n            <AppRoute><Settings /></AppRoute>\n          </Route>\n          <Route path=\"/\">\n            <AppRoute><Home /></AppRoute>\n          </Route>\n        </Switch>\n\n      </div>\n    </BrowserRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}